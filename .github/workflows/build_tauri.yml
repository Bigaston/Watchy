# Simple workflow for deploying static content to GitHub Pages
name: Build the game for Tauri

on: 
  workflow_dispatch:

concurrency:
  group: "tauri"
  cancel-in-progress: false

env:
  ITCH_USERNAME: bigaston
  ITCH_GAME_ID: watchy

jobs:
  publishTauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - name: install frontend dependencies
        run: npm install # change this to npm or pnpm depending on which one you use
      - id: set_var
        run: |
          content=`cat ./src-tauri/tauri.conf.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=tauriConf::$content"
      - name: Extract Tauri Version
        id: tauri_version
        run: |
          echo "::set-output name=version::${{fromJson(steps.set_var.outputs.packageJson).package.version}}"
      - name: Check Version
        run: |
          echo ${{ steps.tauri_version.outputs.version }}
      
      # - uses: tauri-apps/tauri-action@v0
      #   id: tauri
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
      #     releaseName: 'App v__VERSION__'
      #     releaseBody: 'See the assets to download this version and install.'
      #     releaseDraft: true
      #     prerelease: false
      # - name: Publish Just Executable
      #   uses: actions/upload-release-asset@v1.0.1
      #   if: matrix.platform == 'windows-latest'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.tauri.outputs.releaseUploadUrl }}
      #     asset_path: ./src-tauri/target/release/watchy.exe
      #     asset_name: watchy_standalone.exe
      #     asset_content_type: application/x-msdownload
      # - run: echo ${{ steps.tauri.outputs.artifactPaths }}